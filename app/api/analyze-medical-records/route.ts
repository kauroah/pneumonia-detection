import { type NextRequest, NextResponse } from "next/server"
import { cookies } from "next/headers"
import { getUserBySession } from "@/lib/file-storage"
import { createServerClient } from "@/lib/supabase/server"
import { llm } from "@/lib/llm"

export async function POST(request: NextRequest) {
  try {
    const cookieStore = await cookies()
    const sessionId = cookieStore.get("session")?.value

    if (!sessionId) {
      return NextResponse.json({ error: "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" }, { status: 401 })
    }

    const user = await getUserBySession(sessionId)
    if (!user) {
      return NextResponse.json({ error: "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" }, { status: 401 })
    }

    const { patientId } = await request.json()

    if (!patientId) {
      return NextResponse.json({ error: "Patient ID is required" }, { status: 400 })
    }

    // Fetch medical records for the patient
    const supabase = await createServerClient()
    const { data: medicalRecords, error: recordsError } = await supabase
      .from("medical_records")
      .select("*")
      .eq("patient_id", patientId)
      .order("record_date", { ascending: false })
      .limit(10)

    if (recordsError) {
      console.error("Error fetching medical records:", recordsError)
      return NextResponse.json({ error: "Failed to fetch medical records" }, { status: 500 })
    }

    if (!medicalRecords || medicalRecords.length === 0) {
      return NextResponse.json({ error: "No medical records found for this patient" }, { status: 404 })
    }

    // Fetch patient info
    const { data: patient } = await supabase.from("patients").select("*").eq("id", patientId).single()

    // Build comprehensive medical history context
    const medicalHistoryContext = medicalRecords
      .map((record, index) => {
        let context = `\n--- –ú–ï–î–ò–¶–ò–ù–°–ö–ê–Ø –ó–ê–ü–ò–°–¨ #${index + 1} (${new Date(record.record_date).toLocaleDateString("ru-RU")}) ---\n`
        context += `–¢–∏–ø: ${record.record_type}\n`
        context += `–ù–∞–∑–≤–∞–Ω–∏–µ: ${record.title}\n\n`

        // Risk factors
        if (record.comorbidities?.length > 0) {
          context += `–°–û–ü–£–¢–°–¢–í–£–Æ–©–ò–ï –ó–ê–ë–û–õ–ï–í–ê–ù–ò–Ø: ${record.comorbidities.join(", ")}\n`
        }
        if (record.current_medications?.length > 0) {
          context += `–¢–ï–ö–£–©–ò–ï –ú–ï–î–ò–ö–ê–ú–ï–ù–¢–´: ${record.current_medications.join(", ")}\n`
        }
        if (record.allergies?.length > 0) {
          context += `–ê–õ–õ–ï–†–ì–ò–ò: ${record.allergies.join(", ")}\n`
        }
        if (record.smoking_status && record.smoking_status !== "never") {
          context += `–ö–£–†–ï–ù–ò–ï: ${record.smoking_status === "current" ? "–ö—É—Ä–∏—Ç" : "–ë—ã–≤—à–∏–π –∫—É—Ä–∏–ª—å—â–∏–∫"}`
          if (record.smoking_pack_years) {
            context += ` (${record.smoking_pack_years} –ø–∞—á–∫–æ-–ª–µ—Ç)`
          }
          context += `\n`
        }
        if (record.alcohol_use && record.alcohol_use !== "none") {
          context += `–ê–õ–ö–û–ì–û–õ–¨: ${record.alcohol_use}\n`
        }
        if (record.immunosuppressed) {
          context += `‚ö†Ô∏è –ò–ú–ú–£–ù–û–°–£–ü–†–ï–°–°–ò–Ø: –î–∞\n`
        }
        if (record.recent_hospitalization) {
          context += `‚ö†Ô∏è –ù–ï–î–ê–í–ù–Ø–Ø –ì–û–°–ü–ò–¢–ê–õ–ò–ó–ê–¶–ò–Ø: –î–∞\n`
        }
        if (record.recent_antibiotics) {
          context += `–ù–ï–î–ê–í–ù–ò–ô –ü–†–ò–ï–ú –ê–ù–¢–ò–ë–ò–û–¢–ò–ö–û–í: –î–∞\n`
        }

        // Lab values
        context += `\n–õ–ê–ë–û–†–ê–¢–û–†–ù–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:\n`
        if (record.wbc_count) context += `  ‚Ä¢ –õ–µ–π–∫–æ—Ü–∏—Ç—ã (WBC): ${record.wbc_count} cells/ŒºL (–Ω–æ—Ä–º–∞: 4.0-11.0)\n`
        if (record.rbc_count) context += `  ‚Ä¢ –≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã (RBC): ${record.rbc_count} –º–ª–Ω/ŒºL (–Ω–æ—Ä–º–∞: 4.5-5.5)\n`
        if (record.hemoglobin) context += `  ‚Ä¢ –ì–µ–º–æ–≥–ª–æ–±–∏–Ω: ${record.hemoglobin} g/dL (–Ω–æ—Ä–º–∞: 12.0-16.0)\n`
        if (record.platelet_count) context += `  ‚Ä¢ –¢—Ä–æ–º–±–æ—Ü–∏—Ç—ã: ${record.platelet_count} cells/ŒºL (–Ω–æ—Ä–º–∞: 150-400k)\n`
        if (record.neutrophils) context += `  ‚Ä¢ –ù–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã: ${record.neutrophils}% (–Ω–æ—Ä–º–∞: 40-70%)\n`
        if (record.lymphocytes) context += `  ‚Ä¢ –õ–∏–º—Ñ–æ—Ü–∏—Ç—ã: ${record.lymphocytes}% (–Ω–æ—Ä–º–∞: 20-40%)\n`
        if (record.crp) context += `  ‚Ä¢ CRP: ${record.crp} mg/L (–Ω–æ—Ä–º–∞: <10)\n`
        if (record.esr) context += `  ‚Ä¢ –°–û–≠: ${record.esr} mm/hr (–Ω–æ—Ä–º–∞: 0-20)\n`
        if (record.procalcitonin) context += `  ‚Ä¢ –ü—Ä–æ–∫–∞–ª—å—Ü–∏—Ç–æ–Ω–∏–Ω: ${record.procalcitonin} ng/mL (–Ω–æ—Ä–º–∞: <0.5)\n`
        if (record.spo2) context += `  ‚Ä¢ SpO2: ${record.spo2}% (–Ω–æ—Ä–º–∞: 95-100%)\n`
        if (record.respiratory_rate) context += `  ‚Ä¢ –ß–î: ${record.respiratory_rate}/–º–∏–Ω (–Ω–æ—Ä–º–∞: 12-20)\n`
        if (record.temperature) context += `  ‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${record.temperature}¬∞C (–Ω–æ—Ä–º–∞: 36.5-37.5)\n`
        if (record.heart_rate) context += `  ‚Ä¢ –ü—É–ª—å—Å: ${record.heart_rate} —É–¥/–º–∏–Ω (–Ω–æ—Ä–º–∞: 60-100)\n`
        if (record.blood_pressure_systolic && record.blood_pressure_diastolic) {
          context += `  ‚Ä¢ –ê–î: ${record.blood_pressure_systolic}/${record.blood_pressure_diastolic} mmHg\n`
        }

        if (record.findings) {
          context += `\n–†–ï–ó–£–õ–¨–¢–ê–¢–´: ${record.findings}\n`
        }
        if (record.notes) {
          context += `–ó–ê–ú–ï–¢–ö–ò –í–†–ê–ß–ê: ${record.notes}\n`
        }

        return context
      })
      .join("\n")

    const prompt = `–í—ã ‚Äî –≤—Ä–∞—á-–¥–∏–∞–≥–Ω–æ—Å—Ç –ø–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏. –≠—Ç–æ –Ω–µ —á–∞—Ç, –∞ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥–ª—è –∫–ª–∏–Ω–∏—Ü–∏—Å—Ç–∞. –†–∞–±–æ—Ç–∞–π—Ç–µ —Å—Ç—Ä–æ–≥–æ —Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π—Ç–µ. –ï—Å–ª–∏ —Å–≤–µ–¥–µ–Ω–∏–π –Ω–µ—Ç ‚Äî –ø–∏—à–∏—Ç–µ ¬´–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö¬ª. 
–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Markdown-—Ä–∞–∑–º–µ—Ç–∫—É –∏ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª—ã –≤—Ä–æ–¥–µ **, ##, >, [ ] –∏–ª–∏ —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —á–µ—Ä—Ç—ã. 
–ü–∏—à–∏—Ç–µ —á–∏—Å—Ç—ã–º —Ä—É—Å—Å–∫–∏–º —è–∑—ã–∫–æ–º, –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, –±–µ–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤. 
–§–æ–∫—É—Å ‚Äî –ø—É–ª—å–º–æ–Ω–æ–ª–æ–≥–∏—è/—Ä–µ–Ω—Ç–≥–µ–Ω–æ–ª–æ–≥–∏—è (–ø–Ω–µ–≤–º–æ–Ω–∏—è, —Ç—É–±–µ—Ä–∫—É–ª—ë–∑, –∫–∞—Ä–¥–∏–æ–º–µ–≥–∞–ª–∏—è, –ø–ª–µ–≤—Ä–∞–ª—å–Ω—ã–π –≤—ã–ø–æ—Ç –∏ –¥—Ä., –µ—Å–ª–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ).

–ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï
–ò–º—è: ${patient?.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
–í–æ–∑—Ä–∞—Å—Ç: ${patient?.age || "–ù–µ —É–∫–∞–∑–∞–Ω"} –ª–µ—Ç
–ü–æ–ª: ${patient?.gender || "–ù–µ —É–∫–∞–∑–∞–Ω"}
–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏, –ø–æ —É–±—ã–≤–∞–Ω–∏—é –¥–∞—Ç—ã):
${medicalHistoryContext}

–°–¢–†–û–ì–ò–ï –ü–†–ê–í–ò–õ–ê
1) –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —à–∞–±–ª–æ–Ω–Ω—ã–µ –∑–∞–≥–æ—Ç–æ–≤–∫–∏, –ø—É—Å—Ç—ã–µ —Å–∫–æ–±–∫–∏ –∏–ª–∏ —Å–ª–æ–≤–∞ —Ç–∏–ø–∞ ¬´[–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å]¬ª, ¬´[–ü–µ—Ä–∏–æ–¥]¬ª, ¬´[–ü—Ä–∏—á–∏–Ω–∞]¬ª. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî ¬´–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö¬ª.
2) –ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∫–∞–∫ –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ù–æ—Ä–º—ã –ø—Ä–∏–≤–æ–¥–∏—Ç–µ –≤ —Ç–µ—Ö –∂–µ –µ–¥–∏–Ω–∏—Ü–∞—Ö. 
3) –ü—Ä–æ—Ü–µ–Ω—Ç—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–∞—Å—á—ë—Ç –Ω–∞–¥—ë–∂–µ–Ω; –∏–Ω–∞—á–µ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ ¬´–≤—ã—à–µ –Ω–æ—Ä–º—ã¬ª/¬´–Ω–∏–∂–µ –Ω–æ—Ä–º—ã¬ª.
4) –ü—Ä–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–ø–∏—Å—è—Ö –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –¥–∏–Ω–∞–º–∏–∫—É (—Ä–æ—Å—Ç, —Å–Ω–∏–∂–µ–Ω–∏–µ, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å).
5) –ù–µ –ø—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –∏–Ω–≤–∞–∑–∏–≤–Ω—ã–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –±–µ–∑ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏–π –≤ –¥–∞–Ω–Ω—ã—Ö.
6) –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ä–∏—Å–∫–∞ –≤ –∫–æ–Ω—Ü–µ —Ä–µ–∑—é–º–µ –≤ —Ç–æ—á–Ω–æ–π —Ñ–æ—Ä–º–µ –Ω–∏–∂–µ (—Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç).

–°–¢–†–£–ö–¢–£–†–ê –í–´–í–û–î–ê (–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª; –±–µ–∑ Markdown –∏ –±–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ–∫)

–ê–ù–ê–õ–ò–ó –ú–ï–î–ò–¶–ò–ù–°–ö–û–ô –ò–°–¢–û–†–ò–ò –ü–ê–¶–ò–ï–ù–¢–ê

–ü–∞—Ü–∏–µ–Ω—Ç: ${patient?.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
–ü–æ–ª: ${patient?.gender || "–ù–µ —É–∫–∞–∑–∞–Ω"}
–í–æ–∑—Ä–∞—Å—Ç: ${patient?.age || "–ù–µ —É–∫–∞–∑–∞–Ω"} –ª–µ—Ç

–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ (TL;DR)
‚Äî –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è: ‚Ä¶
‚Äî –ö–ª—é—á–µ–≤—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π: ‚Ä¶
‚Äî –ù–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ(—è): ‚Ä¶
‚Äî –°—Ä–æ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã (–µ—Å–ª–∏ –µ—Å—Ç—å): ‚Ä¶ / –Ω–µ—Ç

–ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –†–ò–°–ö–ê: –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–≤–Ω–æ –æ–¥–Ω—É —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É
‚Äî –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –†–ò–°–ö–ê: üü¢ –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫
‚Äî –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –†–ò–°–ö–ê: üü° —É–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–∏—Å–∫
‚Äî –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –†–ò–°–ö–ê: üü† –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫
‚Äî –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –†–ò–°–ö–ê: üî¥ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π

–í—ã—è–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞
‚Äî –°–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è: ‚Ä¶
‚Äî –¢–µ–∫—É—â–∏–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: ‚Ä¶
‚Äî –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ (–∫—É—Ä–µ–Ω–∏–µ, –∞–ª–∫–æ–≥–æ–ª—å): ‚Ä¶
‚Äî –ò–º–º—É–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å/–∏–º–º—É–Ω–æ—Å—É–ø—Ä–µ—Å—Å–∏—è: ‚Ä¶
‚Äî –ù–µ–¥–∞–≤–Ω–∏–µ –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏/–∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏: ‚Ä¶
‚Äî –ü—Ä–æ—á–∏–µ –∑–Ω–∞—á–∏–º—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã: ‚Ä¶

–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
(–û—Ñ–æ—Ä–º–∏—Ç–µ –∫–∞–∫ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π –±–ª–æ–∫ —Å –≤—ã—Ä–æ–≤–Ω–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏, –±–µ–∑ —Ç–∞–±–ª–∏—Ü —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–º–∏ —á–µ—Ä—Ç–∞–º–∏.)
–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Ç—Ä–æ–∫:
–õ–µ–π–∫–æ—Ü–∏—Ç—ã (WBC): [–∑–Ω–∞—á–µ–Ω–∏–µ]; –Ω–æ—Ä–º–∞ 4.0‚Äì11.0 ‚Ä¶; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–ù–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã: [–∑–Ω–∞—á–µ–Ω–∏–µ]%; –Ω–æ—Ä–º–∞ 40‚Äì70%; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–õ–∏–º—Ñ–æ—Ü–∏—Ç—ã: [–∑–Ω–∞—á–µ–Ω–∏–µ]%; –Ω–æ—Ä–º–∞ 20‚Äì40%; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã (RBC): [–∑–Ω–∞—á–µ–Ω–∏–µ] ‚Ä¶; –Ω–æ—Ä–º–∞ 4.5‚Äì5.5 ‚Ä¶; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–ì–µ–º–æ–≥–ª–æ–±–∏–Ω: [–∑–Ω–∞—á–µ–Ω–∏–µ] g/dL; –Ω–æ—Ä–º–∞ 12.0‚Äì16.0; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–¢—Ä–æ–º–±–æ—Ü–∏—Ç—ã: [–∑–Ω–∞—á–µ–Ω–∏–µ] ‚Ä¶; –Ω–æ—Ä–º–∞ 150‚Äì400k ‚Ä¶; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
CRP: [–∑–Ω–∞—á–µ–Ω–∏–µ] mg/L; –Ω–æ—Ä–º–∞ < 10; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–°–û–≠: [–∑–Ω–∞—á–µ–Ω–∏–µ] mm/hr; –Ω–æ—Ä–º–∞ 0‚Äì20; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–ü—Ä–æ–∫–∞–ª—å—Ü–∏—Ç–æ–Ω–∏–Ω: [–∑–Ω–∞—á–µ–Ω–∏–µ] ng/mL; –Ω–æ—Ä–º–∞ < 0.5; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
SpO‚ÇÇ: [–∑–Ω–∞—á–µ–Ω–∏–µ]%; –Ω–æ—Ä–º–∞ 95‚Äì100%; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–ß–∞—Å—Ç–æ—Ç–∞ –¥—ã—Ö–∞–Ω–∏—è: [–∑–Ω–∞—á–µ–Ω–∏–µ]/–º–∏–Ω; –Ω–æ—Ä–º–∞ 12‚Äì20; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: [–∑–Ω–∞—á–µ–Ω–∏–µ] ¬∞C; –Ω–æ—Ä–º–∞ 36.5‚Äì37.5; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–ü—É–ª—å—Å: [–∑–Ω–∞—á–µ–Ω–∏–µ] —É–¥/–º–∏–Ω; –Ω–æ—Ä–º–∞ 60‚Äì100; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶
–ê—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ: [—Å–∏—Å—Ç–æ–ª–∏—á–µ—Å–∫–æ–µ/–¥–∏–∞—Å—Ç–æ–ª–∏—á–µ—Å–∫–æ–µ] mmHg; –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ‚Ä¶

–î–∏–Ω–∞–º–∏–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ –º–µ–Ω–µ–µ –¥–≤—É—Ö –∑–∞–ø–∏—Å–µ–π)
‚Äî WBC: —Ä–æ—Å—Ç/—Å–Ω–∏–∂–µ–Ω–∏–µ/—Å—Ç–∞–±–∏–ª—å–Ω–æ
‚Äî –ù–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã: —Ä–æ—Å—Ç/—Å–Ω–∏–∂–µ–Ω–∏–µ/—Å—Ç–∞–±–∏–ª—å–Ω–æ
‚Äî CRP: —Ä–æ—Å—Ç/—Å–Ω–∏–∂–µ–Ω–∏–µ/—Å—Ç–∞–±–∏–ª—å–Ω–æ
‚Äî –ü—Ä–æ—á–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏: ‚Ä¶

–ù–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä—è–¥)
1. –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è ‚Äî –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –ø–æ –¥–∞–Ω–Ω—ã–º (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏, –∂–∞–ª–æ–±—ã/–Ω–∞—Ö–æ–¥–∫–∏, –¥–∏–Ω–∞–º–∏–∫–∞)
2. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ
3. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ
(–û—Ç–º–µ—Ç—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∫ –∏—Å–∫–ª—é—á–µ–Ω–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–ª–æ–≤–∞–º–∏ ¬´—Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–≤–æ–æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è¬ª.)

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É)
‚Äî –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ 1 ‚Äî —Ü–µ–ª—å/–∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–π —Å–º—ã—Å–ª
‚Äî –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ 2 ‚Äî —Ü–µ–ª—å/–∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–π —Å–º—ã—Å–ª
‚Äî –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ 3 ‚Äî —Ü–µ–ª—å/–∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–π —Å–º—ã—Å–ª

–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
‚Äî –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç 1 ‚Äî –ø—Ä–∏—á–∏–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Äî –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç 2 ‚Äî –ø—Ä–∏—á–∏–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
‚Äî –ö–∞–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å, –∫–∞–∫ —á–∞—Å—Ç–æ, –∏ –ø–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ü–µ–Ω–∫–∏

–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∏ –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
‚Äî –ü–∏—Ç–∞–Ω–∏–µ: ‚Ä¶
‚Äî –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ‚Ä¶
‚Äî –†–µ–∂–∏–º –æ—Ç–¥—ã—Ö–∞/—Å–æ–Ω: ‚Ä¶
‚Äî –û—Ç–∫–∞–∑ –æ—Ç –∫—É—Ä–µ–Ω–∏—è, –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –ø–æ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º –∏ –¥—Ä.: ‚Ä¶

–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ö–æ–¥–∫–∏ (–µ—Å–ª–∏ –∏–º–µ—é—Ç—Å—è)
‚Äî –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —á—ë—Ç–∫–æ, –∫–∞–∂–¥–∞—è —Å –∫—Ä–∞—Ç–∫–∏–º –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏

–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
‚Äî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${medicalRecords.length}
‚Äî –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∞–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º, –±–µ–∑ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –¥–∏–∞–≥–Ω–æ–∑–∞
‚Äî –î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: ${new Date().toLocaleDateString("ru-RU")}`

    const result = await llm().generate({
      messages: [
        { role: "system", content: prompt },
      ],
      temperature: 0.3,
      maxOutputTokens: 3000,
    })

    const analysisText = result.text

    // Extract risk level from the analysis
    let riskLevel: "low" | "moderate" | "high" | "critical" = "moderate"
    if (analysisText.toLowerCase().includes("–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π") || analysisText.toLowerCase().includes("critical")) {
      riskLevel = "critical"
    } else if (
      analysisText.toLowerCase().includes("–≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫") ||
      analysisText.toLowerCase().includes("high risk")
    ) {
      riskLevel = "high"
    } else if (analysisText.toLowerCase().includes("–Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫") || analysisText.toLowerCase().includes("low risk")) {
      riskLevel = "low"
    }

    // Save to database
    const { data: savedAnalysis, error: saveError } = await supabase
      .from("ai_medical_analyses")
      .insert({
        patient_id: patientId,
        doctor_id: user.id,
        analysis_text: analysisText,
        medical_records_count: medicalRecords.length,
        risk_level: riskLevel,
      })
      .select()
      .single()

    if (saveError) {
      console.error("Error saving AI analysis:", saveError)
      // Continue even if save fails - return the analysis anyway
    }

    return NextResponse.json({
      success: true,
      recommendation: analysisText,
      recordsAnalyzed: medicalRecords.length,
      analysisId: savedAnalysis?.id,
      riskLevel,
    })
  } catch (error) {
    console.error("Error analyzing medical records:", error)
    return NextResponse.json({ error: "Failed to analyze medical records" }, { status: 500 })
  }
}
